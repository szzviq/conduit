{
  "uid" : "aa373669440b3b3b",
  "name" : "test_new_article_from_file",
  "fullName" : "test_conduit.test_all_conduit.TestConduit1#test_new_article_from_file",
  "historyId" : "118977acd433c20dfae392836695407f",
  "time" : {
    "start" : 1628848122835,
    "stop" : 1628848176751,
    "duration" : 53916
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 7 == (0 + 6)",
  "statusTrace" : "self = <test_all_conduit.TestConduit1 object at 0x7f47a0d54d60>\n\n    def test_new_article_from_file(self):\n        conduit_signin(self.driver)\n        time.sleep(2)\n        # self.driver.get(f\"http://localhost:1667/#/@{username}/\")\n        # time.sleep(4)\n        my_articles2 = self.driver.find_elements_by_xpath('//a[@href=\"#/@{username}/\"]//parent::div//following-sibling::a/h1')\n        number_of_articles = len(my_articles2)\n        allure.attach(self.driver.get_screenshot_as_png(), name=\"Before\", attachment_type=AttachmentType.PNG)\n        time.sleep(2)\n        with open('article.csv', 'r', encoding=\"utf-8\") as csv_in:\n            csv_reader = csv.reader(csv_in, delimiter=',')\n            next(csv_reader)\n            for row in csv_reader:\n                sor = [x.strip(' ') for x in row]\n                self.driver.find_element_by_xpath('//a[@href=\"#/editor\"]').click()\n                time.sleep(3)\n                self.driver.find_element_by_xpath('//input[contains(@placeholder,\"Article Title\")]').send_keys(sor[0])\n                self.driver.find_element_by_xpath('//input[contains(@placeholder,\"about\")]').send_keys(sor[1])\n    \n                self.driver.find_element_by_xpath('//textarea[contains(@placeholder,\"Write your\")]').send_keys(sor[2])\n                self.driver.find_element_by_xpath('//input[contains(@placeholder,\"tags\")]').send_keys(sor[3])\n                self.driver.find_element_by_xpath('//button[contains(text(),\"Publish\")]').click()\n                time.sleep(3)\n        time.sleep(5)\n        #self.driver.find_element_by_xpath('//nav/div/ul/li/a[starts-with(@href, \"#/@\")]').click()\n        self.driver.find_element_by_xpath('//nav/div/ul/li/a[@href=\"#/\"]').click()\n        time.sleep(2)\n        #ellenőrizzük, hogy mind a hat blogposzt megjelent-e\n        articles_after_writing = len(self.driver.find_elements_by_xpath(f'//a[@href=\"#/@{username}/\"]//parent::div//following-sibling::a/h1'))\n        allure.attach(self.driver.get_screenshot_as_png(), name=\"After\", attachment_type=AttachmentType.PNG)\n        time.sleep(2)\n>       assert articles_after_writing == number_of_articles + 6\nE       assert 7 == (0 + 6)\n\ntest_conduit/test_all_conduit.py:178: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 7 == (0 + 6)",
    "statusTrace" : "self = <test_all_conduit.TestConduit1 object at 0x7f47a0d54d60>\n\n    def test_new_article_from_file(self):\n        conduit_signin(self.driver)\n        time.sleep(2)\n        # self.driver.get(f\"http://localhost:1667/#/@{username}/\")\n        # time.sleep(4)\n        my_articles2 = self.driver.find_elements_by_xpath('//a[@href=\"#/@{username}/\"]//parent::div//following-sibling::a/h1')\n        number_of_articles = len(my_articles2)\n        allure.attach(self.driver.get_screenshot_as_png(), name=\"Before\", attachment_type=AttachmentType.PNG)\n        time.sleep(2)\n        with open('article.csv', 'r', encoding=\"utf-8\") as csv_in:\n            csv_reader = csv.reader(csv_in, delimiter=',')\n            next(csv_reader)\n            for row in csv_reader:\n                sor = [x.strip(' ') for x in row]\n                self.driver.find_element_by_xpath('//a[@href=\"#/editor\"]').click()\n                time.sleep(3)\n                self.driver.find_element_by_xpath('//input[contains(@placeholder,\"Article Title\")]').send_keys(sor[0])\n                self.driver.find_element_by_xpath('//input[contains(@placeholder,\"about\")]').send_keys(sor[1])\n    \n                self.driver.find_element_by_xpath('//textarea[contains(@placeholder,\"Write your\")]').send_keys(sor[2])\n                self.driver.find_element_by_xpath('//input[contains(@placeholder,\"tags\")]').send_keys(sor[3])\n                self.driver.find_element_by_xpath('//button[contains(text(),\"Publish\")]').click()\n                time.sleep(3)\n        time.sleep(5)\n        #self.driver.find_element_by_xpath('//nav/div/ul/li/a[starts-with(@href, \"#/@\")]').click()\n        self.driver.find_element_by_xpath('//nav/div/ul/li/a[@href=\"#/\"]').click()\n        time.sleep(2)\n        #ellenőrizzük, hogy mind a hat blogposzt megjelent-e\n        articles_after_writing = len(self.driver.find_elements_by_xpath(f'//a[@href=\"#/@{username}/\"]//parent::div//following-sibling::a/h1'))\n        allure.attach(self.driver.get_screenshot_as_png(), name=\"After\", attachment_type=AttachmentType.PNG)\n        time.sleep(2)\n>       assert articles_after_writing == number_of_articles + 6\nE       assert 7 == (0 + 6)\n\ntest_conduit/test_all_conduit.py:178: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d3caf964b07560f7",
      "name" : "Before",
      "source" : "d3caf964b07560f7.png",
      "type" : "image/png",
      "size" : 50283
    }, {
      "uid" : "7bcc92e91a427c68",
      "name" : "After",
      "source" : "7bcc92e91a427c68.png",
      "type" : "image/png",
      "size" : 54168
    }, {
      "uid" : "55c29e8e70ce8f1d",
      "name" : "log",
      "source" : "55c29e8e70ce8f1d.txt",
      "type" : "text/plain",
      "size" : 344
    }, {
      "uid" : "22390b175a91b5b1",
      "name" : "stderr",
      "source" : "22390b175a91b5b1.txt",
      "type" : "text/plain",
      "size" : 215
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 4,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test_conduit"
  }, {
    "name" : "suite",
    "value" : "test_all_conduit"
  }, {
    "name" : "subSuite",
    "value" : "TestConduit1"
  }, {
    "name" : "host",
    "value" : "fv-az72-270"
  }, {
    "name" : "thread",
    "value" : "3764-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_conduit.test_all_conduit"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "aa373669440b3b3b.json",
  "parameterValues" : [ ]
}